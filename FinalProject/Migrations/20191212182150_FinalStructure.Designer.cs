// <auto-generated />
using System;
using FinalProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalProject.Migrations
{
    [DbContext(typeof(FinalProjectContext))]
    [Migration("20191212182150_FinalStructure")]
    partial class FinalStructure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinalProject.Models.CSSystem", b =>
                {
                    b.Property<int>("CSSystemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrimaryUserID")
                        .HasColumnType("int");

                    b.HasKey("CSSystemID");

                    b.HasIndex("PrimaryUserID");

                    b.ToTable("CSSystems");
                });

            modelBuilder.Entity("FinalProject.Models.InventoryItem", b =>
                {
                    b.Property<int>("InventoryItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CheckedOut")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("InventoryItemID");

                    b.HasIndex("UserID");

                    b.ToTable("InventoryItems");
                });

            modelBuilder.Entity("FinalProject.Models.Professor", b =>
                {
                    b.Property<int>("ProfessorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfessorID");

                    b.ToTable("Professors");
                });

            modelBuilder.Entity("FinalProject.Models.ProfessorSoftware", b =>
                {
                    b.Property<int>("ProfessorID")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareID")
                        .HasColumnType("int");

                    b.HasKey("ProfessorID", "SoftwareID");

                    b.HasIndex("SoftwareID");

                    b.ToTable("ProfessorSoftware");
                });

            modelBuilder.Entity("FinalProject.Models.Software", b =>
                {
                    b.Property<int>("SoftwareID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CSOnly")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SoftwareID");

                    b.ToTable("Software");
                });

            modelBuilder.Entity("FinalProject.Models.SystemSoftware", b =>
                {
                    b.Property<int>("CSSystemID")
                        .HasColumnType("int");

                    b.Property<int>("SoftwareID")
                        .HasColumnType("int");

                    b.HasKey("CSSystemID", "SoftwareID");

                    b.HasIndex("SoftwareID");

                    b.ToTable("SystemSoftware");
                });

            modelBuilder.Entity("FinalProject.Models.CSSystem", b =>
                {
                    b.HasOne("FinalProject.Models.Professor", "PrimaryUser")
                        .WithMany("PrimaryUserSystems")
                        .HasForeignKey("PrimaryUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.InventoryItem", b =>
                {
                    b.HasOne("FinalProject.Models.Professor", "User")
                        .WithMany("CheckedOutItems")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("FinalProject.Models.ProfessorSoftware", b =>
                {
                    b.HasOne("FinalProject.Models.Professor", "Professor")
                        .WithMany("NeededSoftware")
                        .HasForeignKey("ProfessorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Software", "Software")
                        .WithMany("NeededBy")
                        .HasForeignKey("SoftwareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.SystemSoftware", b =>
                {
                    b.HasOne("FinalProject.Models.CSSystem", "CSSystem")
                        .WithMany("NeededSoftware")
                        .HasForeignKey("CSSystemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Software", "Software")
                        .WithMany("NeededOn")
                        .HasForeignKey("SoftwareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
